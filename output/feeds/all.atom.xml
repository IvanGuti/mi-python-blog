<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Raul E. Lopez Briega</title><link href="/" rel="alternate"></link><link href="/feeds/all.atom.xml" rel="self"></link><id>/</id><updated>2014-05-25T00:00:00-03:00</updated><entry><title>Mi Python Blog: Introducción a Python</title><link href="/blog/2014/05/25/mi-python-blog-introduccion-a-python/" rel="alternate"></link><updated>2014-05-25T00:00:00-03:00</updated><author><name>Raul E. Lopez Briega</name></author><id>tag:,2014-05-25:blog/2014/05/25/mi-python-blog-introduccion-a-python/</id><summary type="html">&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Hoy comienzo mi nuevo blog en &lt;a href="https://github.com/" target="_blank" title="Pagina de github"&gt;github&lt;/a&gt;; este nuevo blog, que se suma a a mi otro blog &lt;a href="http://relopezbriega.com.ar" target="_blank" title ="Mi otro blog"&gt;relopezbriega.com.ar&lt;/a&gt;, lo voy a dedicar enteramente a &lt;a href="http://python.org" target="_blank" title="Python"&gt;Python&lt;/a&gt;. Por tal motivo, en este primer artículo, voy a explicar a grandes rasgos que es &lt;a href="http://python.org" target="_blank" title="Python"&gt;Python&lt;/a&gt; y por qué me gusta tanto trabajar con &lt;a href="http://python.org"&gt;Python&lt;/a&gt; como para dedicarle este blog.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://python.org" target="_blank" title="Python"&gt;Python&lt;/a&gt; es un lenguaje de programación de alto nivel que se caracteriza por hacer hincapié en una sintaxis limpia, que favorece un código legible y facilmente administrable. &lt;a href="http://python.org" target="_blank" title="Python"&gt;Python&lt;/a&gt; funciona en las plataformas Windows, Linux/Unix, Mac OS X e incluso ha sido portado a las máquinas virtuales de &lt;a href="http://es.wikipedia.org/wiki/JVM" target="_blank" title="Máquina virtual Java"&gt;Java&lt;/a&gt; (a través de &lt;a href="http://www.jython.org/"&gt;Jython&lt;/a&gt;) y &lt;a href="http://es.wikipedia.org/wiki/Microsoft_.NET"&gt;.Net&lt;/a&gt; (a través de &lt;a href="http://ironpython.codeplex.com/"&gt;IronPython&lt;/a&gt;). &lt;a href="http://python.org" target="_blank" title="Python"&gt;Python&lt;/a&gt; es un lenguaje libre y fácil de aprender que te permite trabajar más rápido e integrar tus sistemas de manera más eficaz; con &lt;a href="http://python.org" target="_blank" title="Python"&gt;Python&lt;/a&gt; se puede ganar rapidamente en productividad.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://python.org"&gt;Python&lt;/a&gt;, a diferencia de otros lenguajes de programación como &lt;a href="http://es.wikipedia.org/wiki/C_(lenguaje_de_programaci%C3%B3n"&gt;C&lt;/a&gt;, &lt;a href="http://es.wikipedia.org/wiki/C%2B%2B"&gt;C++&lt;/a&gt; o &lt;a href="http://es.wikipedia.org/wiki/Java_(lenguaje_de_programaci%C3%B3n"&gt;Java&lt;/a&gt; es &lt;em&gt;interpretado y dinamicamente tipado&lt;/em&gt;; lo que quiere decir que no es necesario compilar el fuente para poder ejecutarlo (&lt;em&gt;interpretado&lt;/em&gt;) y que sus variables pueden tomar distintos tipos de objetos (&lt;em&gt;dinamicamente tipado&lt;/em&gt;); esto hace que el lenguaje sea sumamente flexible y de rápida implementación; aunque pierde en rendimiento y es más propenso a errores de programación que los lenguajes antes mencionados.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="principales-fortalezas-de-python"&gt;Principales fortalezas de Python&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Las principales fortalezas que hacen que uno ame a &lt;a href="http://python.org"&gt;Python&lt;/a&gt; son:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Es Orientado a Objetos.&lt;/strong&gt; &lt;a href="http://python.org"&gt;Python&lt;/a&gt; es un lenguaje de programación &lt;a href="http://es.wikipedia.org/wiki/Programaci%C3%B3n_orientada_a_objetos"&gt;Orientado a Objetos&lt;/a&gt; desde casi su concepción, su modelo de clases soporta las notaciones avanzadas de polimorfismo, sobrecarga de operadores y herencia múltiple. La programación &lt;a href="http://es.wikipedia.org/wiki/Programaci%C3%B3n_orientada_a_objetos"&gt;Orientado a Objetos&lt;/a&gt; es sumamente fácil de aplicar con la sintaxis simple que nos proporciona &lt;a href="http://python.org"&gt;Python&lt;/a&gt;. Asimismo, también es importante destacar que en &lt;a href="http://python.org"&gt;Python&lt;/a&gt;, la programación &lt;a href="http://es.wikipedia.org/wiki/Programaci%C3%B3n_orientada_a_objetos"&gt;Orientado a Objetos&lt;/a&gt; es una opción y no algo obligatorio como es en &lt;a href="http://es.wikipedia.org/wiki/Java_(lenguaje_de_programaci%C3%B3n"&gt;Java&lt;/a&gt;; ya que &lt;a href="http://python.org"&gt;Python&lt;/a&gt; es &lt;em&gt;multiparadigma&lt;/em&gt; y nos permite programar siguiendo un modelo &lt;a href="http://es.wikipedia.org/wiki/Programaci%C3%B3n_orientada_a_objetos"&gt;Orientado a Objetos&lt;/a&gt; o un modelo &lt;a href="http://es.wikipedia.org/wiki/Programaci%C3%B3n_imperativa"&gt;imperativo&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Es software libre&lt;/strong&gt;. &lt;a href="http://python.org"&gt;Python&lt;/a&gt; es complementamente libre para ser utilizado y redistribuído; no posee restricciones para copiarlo, embeberlo en nuestros sistemas o ser vendido junto con otros productos. &lt;a href="http://python.org"&gt;Python&lt;/a&gt; es un proyecto &lt;a href="http://es.wikipedia.org/wiki/Open_source"&gt;&lt;em&gt;open source&lt;/em&gt;&lt;/a&gt; que es administrado por &lt;a href="http://es.wikipedia.org/wiki/Python_Software_Foundation"&gt;Python Software Foundation&lt;/a&gt;, instutición que se encarga de su suporte y desarrollo.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Es portable&lt;/strong&gt;. La implementación estandar de &lt;a href="http://python.org"&gt;Python&lt;/a&gt; esta escrita en &lt;a href="http://es.wikipedia.org/wiki/C_(lenguaje_de_programaci%C3%B3n"&gt;C&lt;/a&gt;, y puede ser compilada y ejecutada en prácticamente cualquier plataforma que se les ocurra. Podemos encontrar a &lt;a href="http://python.org"&gt;Python&lt;/a&gt; en pequeños dispositivos, como telefonos celulares, hasta grandes infraestructuras de &lt;em&gt;Hardware&lt;/em&gt;, como las supercomputadoras. Al ser un lenguaje &lt;em&gt;interpretado&lt;/em&gt; el mismo &lt;em&gt;código fuente&lt;/em&gt; puede ser ejecutado en cualquier plataforma sin necesidad de realizar grandes cambios.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Es poderoso&lt;/strong&gt;. &lt;a href="http://python.org"&gt;Python&lt;/a&gt; proporciona toda la sencillez y facilidad de uso de un lenguaje de programación &lt;em&gt;interpretado&lt;/em&gt;, junto con las más avanzadas herramientas de ingeniería de software que se encuentran típicamente en los lenguajes compilados. A diferencia de otros lenguajes &lt;em&gt;interpretados&lt;/em&gt;, esta combinación hace a &lt;a href="http://python.org"&gt;Python&lt;/a&gt; sumamente útil para proyectos de desarrollo a gran escala.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Fácil integración&lt;/strong&gt;. Los programas escritos en &lt;a href="http://python.org"&gt;Python&lt;/a&gt; pueden ser facilmente integrados con componentes escritos en otros lenguajes. Por ejemplo la &lt;a href="http://es.wikipedia.org/wiki/C_(lenguaje_de_programaci%C3%B3n"&gt;C&lt;/a&gt; &lt;a href="http://es.wikipedia.org/wiki/API"&gt;API&lt;/a&gt; de &lt;a href="http://python.org"&gt;Python&lt;/a&gt; permite una facíl integración entre los dos lenguajes, permitiendo que los programas escritos en &lt;a href="http://python.org"&gt;Python&lt;/a&gt; puedan llamar a funciones escritas en &lt;a href="http://es.wikipedia.org/wiki/C_(lenguaje_de_programaci%C3%B3n"&gt;C&lt;/a&gt; y viceversa. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Fácil de usar&lt;/strong&gt;. Para ejecutar un programa en &lt;a href="http://python.org"&gt;Python&lt;/a&gt; simplemente debemos escribirlo y ejecutarlo, no existen pasos intermedios de linkeo o compilación como podemos tener en otros lenguajes de programación. Con &lt;a href="http://python.org"&gt;Python&lt;/a&gt; podemos programar en forma interactiva, basta tipear una sentencia para poder ver inmediatamente el resultado. Además los programas en &lt;a href="http://python.org"&gt;Python&lt;/a&gt; son más simples, más pequeños y más flexibles que los programas equivalentes en lenguajes como &lt;a href="http://es.wikipedia.org/wiki/C_(lenguaje_de_programaci%C3%B3n"&gt;C&lt;/a&gt;, &lt;a href="http://es.wikipedia.org/wiki/C%2B%2B"&gt;C++&lt;/a&gt; o &lt;a href="http://es.wikipedia.org/wiki/Java_(lenguaje_de_programaci%C3%B3n"&gt;Java&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Fácil de aprender&lt;/strong&gt;. Desde mi punto de vista, esta es sin duda la principal fortaleza del lenguaje; comparado con otros lenguajes de programación, &lt;a href="http://python.org"&gt;Python&lt;/a&gt; es sumamente fácil de aprender, en tan sólo un par de días se puede estar programando eficientemente con &lt;a href="http://python.org"&gt;Python&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="instalando-python"&gt;Instalando Python&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="en-linux"&gt;En Linux&lt;/h3&gt;
&lt;p&gt;Instalar &lt;a href="http://python.org"&gt;Python&lt;/a&gt; en &lt;a href="http://www.linuxfoundation.org/"&gt;Linux&lt;/a&gt; no es necesario, ya que viene preinstalado en todas las distribuciones más populares.&lt;/p&gt;
&lt;h3 id="en-windows"&gt;En Windows&lt;/h3&gt;
&lt;p&gt;La forma más sencilla de poder instalar &lt;a href="http://python.org"&gt;Python&lt;/a&gt; en Windows es instalando alguna de las distribuciones de &lt;a href="http://python.org"&gt;Python&lt;/a&gt; que ya vienen armadas con los principales módulos. Yo les recomiendo la distribución &lt;a href="http://continuum.io/downloads"&gt;Anaconda&lt;/a&gt;, que se puede descargar en forma gratuita y viene integrada con todos los principales paquetes que vamos a necesitar para trabajar con &lt;a href="http://python.org"&gt;Python&lt;/a&gt;. Una vez que la descargan, simplemente siguen los pasos del instalador y listo, ya tendran todo un ambiente &lt;a href="http://python.org"&gt;Python&lt;/a&gt; para trabajar en Windows.&lt;/p&gt;
&lt;p&gt;Otra distribución de &lt;a href="http://python.org"&gt;Python&lt;/a&gt; que pueden utilizar en Windows, es &lt;a href="http://winpython.sourceforge.net/"&gt;WinPython&lt;/a&gt;, la cual puede ser utilizada incluso en forma portable.&lt;/p&gt;
&lt;p&gt;Hasta aquí este primer artículo de mi nuevo blog; los invito a que se instalen y exploren &lt;a href="http://python.org"&gt;Python&lt;/a&gt;, no solo es fácil de aprender, también es muy divertido programar en &lt;a href="http://python.org"&gt;Python&lt;/a&gt;!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;</summary><category term="python"></category></entry></feed>